CONSOLE ERROR: Uncaught (in promise) #<Object>
Tests that Runtime.compileScript and Runtime.runScript work with awaitPromise flag.

Running test: testRunAndCompileWithoutAgentEnable
{
    code : 0
    message : Runtime agent is not enabled
}
{
    code : 0
    message : Runtime agent is not enabled
}

Running test: testSyntaxErrorInScript
{
    exceptionDetails : {
        columnNumber : 1
        lineNumber : 1
        scriptId : 0
        text : Uncaught SyntaxError: Unexpected token }
    }
}

Running test: testSyntaxErrorInEvalInScript
{
    exceptionDetails : {
        columnNumber : 0
        lineNumber : 0
        scriptId : 0
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 1
                    functionName : 
                    lineNumber : 1
                    scriptId : 0
                    url : boo.js
                }
            ]
        }
        text : Uncaught SyntaxError: Unexpected token }
    }
    result : {
        className : SyntaxError
        description : SyntaxError: Unexpected token }     at boo.js:2:2
        objectId : [ObjectId]
        subtype : error
        type : object
    }
    wasThrown : true
}

Running test: testRunNotCompiledScript
{
    code : 0
    message : No script with given id
}

Running test: testRunCompiledScriptAfterAgentWasReenabled
{
    code : 0
    message : Runtime agent is not enabled
}
{
    code : 0
    message : No script with given id
}

Running test: testRunScriptWithPreview
{
    result : {
        className : Object
        description : Object
        objectId : [ObjectId]
        preview : {
            description : Object
            overflow : false
            properties : [
                [0] : {
                    name : a
                    type : number
                    value : 1
                }
            ]
            type : object
        }
        type : object
    }
    wasThrown : false
}

Running test: testRunScriptReturnByValue
{
    result : {
        type : object
        value : {
            a : 1
        }
    }
    wasThrown : false
}

Running test: testAwaitNotPromise
{
    code : 0
    message : Result of the script execution is not a promise
}

Running test: testAwaitResolvedPromise
{
    result : {
        type : object
        value : {
            a : 1
        }
    }
}

Running test: testAwaitRejectedPromise
{
    exceptionDetails : {
        columnNumber : 0
        lineNumber : 0
        scriptId : 
        stackTrace : {
            callFrames : [
            ]
        }
        text : Promise was rejected
    }
    result : {
        type : object
        value : {
            a : 1
        }
    }
    wasThrown : true
}

