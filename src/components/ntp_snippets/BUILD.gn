# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/ui.gni")

if (is_android) {
  import("//build/config/android/config.gni")
  import("//build/config/android/rules.gni")
}

# GYP version: components/ntp_snippets.gypi:ntp_snippets
static_library("ntp_snippets") {
  sources = [
    "bookmarks/bookmark_last_visit_utils.cc",
    "bookmarks/bookmark_last_visit_utils.h",
    "bookmarks/bookmark_suggestions_provider.cc",
    "bookmarks/bookmark_suggestions_provider.h",
    "category.cc",
    "category.h",
    "category_factory.cc",
    "category_factory.h",
    "category_status.cc",
    "category_status.h",
    "content_suggestion.cc",
    "content_suggestion.h",
    "content_suggestions_provider.cc",
    "content_suggestions_provider.h",
    "content_suggestions_service.cc",
    "content_suggestions_service.h",
    "features.cc",
    "features.h",
    "ntp_snippet.cc",
    "ntp_snippet.h",
    "ntp_snippets_constants.cc",
    "ntp_snippets_constants.h",
    "ntp_snippets_database.cc",
    "ntp_snippets_database.h",
    "ntp_snippets_fetcher.cc",
    "ntp_snippets_fetcher.h",
    "ntp_snippets_scheduler.h",
    "ntp_snippets_service.cc",
    "ntp_snippets_service.h",
    "ntp_snippets_status_service.cc",
    "ntp_snippets_status_service.h",
    "offline_pages/offline_page_suggestions_provider.cc",
    "offline_pages/offline_page_suggestions_provider.h",
    "pref_names.cc",
    "pref_names.h",
    "request_throttler.cc",
    "request_throttler.h",
    "switches.cc",
    "switches.h",
  ]

  public_deps = [
    "//base",
    "//components/keyed_service/core",
    "//components/leveldb_proto",
    "//components/prefs",
    "//components/signin/core/browser",
    "//components/suggestions",
    "//components/sync_driver",
    "//google_apis",
    "//net",
    "//url",
  ]

  deps = [
    "//components/bookmarks/browser",
    "//components/data_use_measurement/core",
    "//components/image_fetcher",
    "//components/metrics",
    "//components/ntp_snippets/proto",
    "//components/offline_pages",
    "//components/variations",
    "//components/variations/net",
    "//third_party/icu/",
    "//ui/gfx",
  ]
}

if (is_android) {
  java_cpp_enum("ntp_snippets_java_enums_srcjar") {
    sources = [
      "category.h",
      "category_status.h",
    ]
  }
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "content_suggestions_service_unittest.cc",
    "ntp_snippet_unittest.cc",
    "ntp_snippets_database_unittest.cc",
    "ntp_snippets_fetcher_unittest.cc",
    "ntp_snippets_service_unittest.cc",
    "ntp_snippets_status_service_unittest.cc",
    "ntp_snippets_test_utils.cc",
    "ntp_snippets_test_utils.h",
    "request_throttler_unittest.cc",
  ]

  deps = [
    ":ntp_snippets",
    "//base",
    "//base/test:test_support",
    "//components/image_fetcher",
    "//components/leveldb_proto:test_support",
    "//components/signin/core/browser:test_support",
    "//components/signin/core/common",
    "//components/sync_driver:test_support",
    "//components/variations",
    "//net:test_support",
    "//testing/gtest",
    "//third_party/icu/",
  ]
}
